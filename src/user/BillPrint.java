/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user;

import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import objects.OrderedProduct;
import objects.Product;

/**
 *
 * @author ari
 */
public class BillPrint extends javax.swing.JFrame {

    /**
     * Creates new form BillPrint
     */
    List <OrderedProduct> orderedProd;
    double flatDiscount,total,returnPrice;
    String customerName,customerMob,customerAdd;
    int bill_no;
    
    
    
    public BillPrint(List <OrderedProduct> orderedProd, double flatDiscount,String customerName,String customerMob,String customerAdd,double returnPrice) {
        this.orderedProd = orderedProd;
        this.flatDiscount = flatDiscount;
        this.customerName = customerName;
        this.customerMob = customerMob;
        this.customerAdd = customerAdd;
        this.returnPrice = returnPrice;
        
        initComponents();
        this.bill_no = get_next_bill_no();
        this.total = generate_bill();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bill = new javax.swing.JTextArea();
        printBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Print Bill");
        setResizable(false);

        bill.setColumns(20);
        bill.setRows(5);
        bill.setText("\n-----------------------------------------------------------------------------------------------------------------------\n\t                     a2z Shopping Mall\n-----------------------------------------------------------------------------------------------------------------------\n\n");
        jScrollPane1.setViewportView(bill);

        printBtn.setBackground(new java.awt.Color(0, 204, 102));
        printBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/printer_logo.png"))); // NOI18N
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addComponent(printBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        try {
            // TODO add your handling code here:
            bill.print();
            
            insert_bill_into_db();
            
            new BillingPage().setVisible(true);
            this.dispose();
            
            
        } catch (PrinterException ex) {
            JOptionPane.showInputDialog(this, ex.getMessage());
        }
        
    }//GEN-LAST:event_printBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea bill;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton printBtn;
    // End of variables declaration//GEN-END:variables

    
    private double generate_bill(){
        double total_ammount=0;
        final int qty_offset = 53,rate_offset=67,ammount_offset=88;
        String date = new SimpleDateFormat("dd-MM-yyyy").format(new Date());
        
        System.out.println("shshd - "+this.bill_no);
        bill.append("   Bill No :-  "+String.valueOf(this.bill_no)+"    	    	      Date:-  "+date+"\n");
        bill.append("   Customer Name    :-  "+customerName+"\n");
        bill.append("   Customer Mobile  :-  "+customerMob+"\n");
        bill.append("   Customer Address :-  "+customerAdd+"\n");
        bill.append("\n-----------------------------------------------------------------------------------------------------------------------\n");
        bill.append("   Item                                              Qty         Rate              Ammount\n");
        bill.append("-----------------------------------------------------------------------------------------------------------------------\n\n");
        int i;
        for(OrderedProduct op : orderedProd){
            
                 
            StringTokenizer st = new StringTokenizer(op.getP().getProduct_name()," ");
           
            
            String pname = st.nextToken();
            bill.append("   "+pname);
            i = pname.length()+3;
            System.out.println(i);
            while(i<qty_offset){
                bill.append(" ");i++;
            }
            
            
            String qty = String.valueOf(op.getOrderQty());
            bill.append(qty);
            i += qty.length();
            while(i<rate_offset){
                bill.append(" ");i++;
            }
            
            String rate = String.valueOf(op.getP().getPrice());
            bill.append(rate);
            i += rate.length();
             while(i<ammount_offset){
                bill.append(" ");i++;
            }
             
            bill.append(String.valueOf(op.getAmmount()));
            bill.append("\n");
            
            total_ammount += op.getAmmount();
            
             while(st.hasMoreTokens()){
                bill.append("   "+st.nextToken()+"\n");
            }
             bill.append("\n");
        }
        
       double tot = total_ammount*(100.0-flatDiscount);
       tot /= 100.0;
       tot -= this.returnPrice;
       bill.append("-----------------------------------------------------------------------------------------------------------------------\n\n");
       bill.append("Return Price:- "+String.valueOf(this.returnPrice)+"      Flat Discount:- "+String.valueOf(flatDiscount)+"          Grand Total:- "+String.valueOf(tot));
       bill.append("\n\n");
       bill.append("-----------------------------------------------------------------------------------------------------------------------\n");
       bill.append("\t\tThank You\n");
       bill.append("-----------------------------------------------------------------------------------------------------------------------");
 
    return tot;
    }
    

    private void insert_bill_into_db() {
       
        Connection conn;
        
        try {
            
            Date d = new Date();
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mall_management","root","ari1106");
            
            
            
            PreparedStatement ps = conn.prepareStatement("insert into bill_details(bill_id,total_price,date,time,flat_discount,customer_name,contact_no,customer_addr) values(null,?,?,?,?,?,?,?)");
            ps.setDouble(1, this.total);
            ps.setDate(2,new java.sql.Date(System.currentTimeMillis()));
            ps.setTimestamp(3, new java.sql.Timestamp(new Date(System.currentTimeMillis()).getTime()));
            ps.setDouble(4, this.flatDiscount);
            ps.setString(5, this.customerName);
            ps.setString(6, customerMob);
            ps.setString(7, this.customerAdd);
            
            ps.execute();
            
            
            for(OrderedProduct op :this.orderedProd){
                
                ps = conn.prepareStatement("insert into bill_product_details(bill_id,product_id,qty) values(?,?,?)");
                ps.setInt(1, this.bill_no);
                ps.setInt(2, op.getP().getProduct_id());
                ps.setInt(3, op.getOrderQty());
                ps.execute();
                
                
                ps = conn.prepareStatement("update product_details set available_qty = ? where product_id=?");
                ps.setInt(1, op.getP().getAvailable_qty()-op.getOrderQty());
                ps.setInt(2, op.getP().getProduct_id());
                ps.execute();
            }
            
            
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
    }

    private int get_next_bill_no() {
       int b_noo=0;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/mall_management","root","ari1106");
            
            PreparedStatement ps = conn.prepareStatement("SELECT AUTO_INCREMENT FROM information_schema.tables WHERE table_name = 'bill_details' and table_schema = database()");
            
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                b_noo = rs.getInt("AUTO_INCREMENT");
              
            }
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        return b_noo;
    }

}
